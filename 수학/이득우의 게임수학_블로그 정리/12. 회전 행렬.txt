@ Rotation Matrix : 회전 행렬

앞선 글에서 삼각함수 sin과 cos에 대해서 알아보았고, 간단하게나마 이 함수들이 어떻게 사용되는지 살펴보았다.
이번에는 sin과 cos을 활용해 회전 행렬을 만들어보는 과정을 유도해보겠다.

# 회전: Rotation
일상적인 경우 회전이란 물체를 돌리는 개념이다.
조금 더 깊이 생각하면 일상 생활의 회전의 개념은 공간은 그대로 있는데, 물체가 혼자 도는 것을 의미한다.

하지만 벡터 공간에서의 회전은 이 개념과는 조금 다르다.
벡터 공간에서의 회전은 물체를 돌릴 때 물체는 그대로 두고,
벡터 공간을 돌리는 것을 의미한다.

공간 전체를 돌리는 것이 아니며,
해당 행위로 인해 물체는 가만히 있는데 돌아간 것처럼 보일 것이다.

이 때 한가지 지켜야 할 점 중 하나는 회전된 물체의 모습에는 변화가 없어야 한다.
변환 전의 물체의 모습과 변환 후의 물체의 모습이 동일해야 비로소 완전한 의미의 회전이라고 할 수 있다.

1. 변환된 각 차원의 기저벡터 크기는 1을 유지한다.
2. 행렬식의 값은 1이다. ( 변환된 벡터의 공간의 크기 변화가 없어야 하니 )
3. 변환된 벡터 공간의 각 차원을 이루는 기저 벡터는 직교성을 그대로 유지한다.

이렇게 변환 전의 모습과 변환 후의 모습을 동일하게 유지시키는 변환(transformation)을
특별히 리지드 변환(rigid transformation) 혹은 아이소메트리(isometry) 라고 한다.

Rigid Transformation의 변환 종류
- 물체의 상하 또는 좌우가 뒤집히는 반사 ( Reflection: 리플렉션 )
- 물체의 이동 ( Translation: 트랜즐레이션 )
- 변화 없음 ( Identity: 아이덴터티 )

이러한 회전의 성질을 파악했다면 sin,cos 함수를 사용해 회전 행렬을 본격적으로 유도해보자.
https://blog.naver.com/destiny9720/221407580011