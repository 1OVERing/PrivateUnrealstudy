@ List
STL에서 지원하며, Double Linked List라는 자료구조를 이용하여 만든
Sequence Container이다.
Duble Linked List의 특징을 거의 그대로 가지고 있으며 linked list 자료구조에 대한 이해가
있어야 알맞는 상황에 알맞게 사용할 수 있다.
- 고정길이인 배열과 달리 길이가 가변적이다.
- vector와 달리 데이터의 중간삽입,중간삭제 속도가 빠르다.
- 데이터 중간 삽입/삭제시 데이터의 개수에 상관없이 동일한 상수시간이 소요된다.
- list의 순회속도는 O(n), 즉 데이터의 개수가 많을 수록 순회속도가 느리다.
- 각 노드는 앞쪽, 뒤쪽 노드와 연결된 Double Linked List(이중 연결 리스트)이다.
	( 반대는 std::forward_list로써,단일 연결 리스트이다)
사용시 좋은 경우
저장할 데이터의 개수가 가변적일때
저장된 요소를 자주 검색하지 않을때
중간에 데이터 삽입,삭제가 자주 발생할때
랜덤 엑세스를 자주 안할때

@ forward_list
STL에서 지원하면 list 헤더로 사용이 가능하다.
Double Linked list인 std::list와는 다르게 단일 연결 리스트이다.


D2Coding 코드 폰트 변경

@ 함수 포인터

@ std::string / std::wstring
substr/find


@Array / BitArray

@FORCEINLINE