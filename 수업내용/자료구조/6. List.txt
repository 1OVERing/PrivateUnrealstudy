@ 헤더 :<list>
@ 라이브러리 : Standard Tamplate Library ( 스탠다드 템플릿 라이브러리 )
@ 클래스 이름 : std::list
@ 컨테이너 방식 : Sequence Container(시퀸스 컨테이너)
@ 특징 :
	ㆍ메모리의 할당이 가변적이다.
	ㆍ데이터의 중간 삽입/삭제의 속도가 빠르다.
	ㆍ데이터의 개수와는 상관없이 중간 삽입/삭제가 동일한 상수시간이 소요된다.
	ㆍlist의 순회속도는 O(n), 즉 데이터가 많으면 많을 수록 순회속도가 느리다.
	ㆍ각 노드는 앞쪽, 뒤쪽 노드가 연결된 Double Linked List(이중 연결 리스트)이다.



@ 추가 설명
Double Linked List라는 자료구조를 이용하여 만든 Sequence Container이다.
일반 배열과 다르게 미리 저장할 데이터를 할당해두고 데이터를 삽입하는 방식이 아닌
데이터를 삽입시 메모리를 따로 할당받아 참조하는 삽입형태라 가변적이며,
vector와 달리 중간 삽입/삭제의 속도가 빠른다.
중간 삽입/삭제를 할 때의 속도는 데이터의 개수와 상관없이 동일한 상수시간이 소요된다.
순회속도는 O(n),이며 데이터의 개수가 많아지면 느려진다.


@ 사용해야 하는 경우
	ㆍ저장할 데이터의 개수가 가변적일때
	ㆍ저장된 요소를 자주 검색하지 않을때
	ㆍ중간 데이터의 삽입/삭제가 자주 발생할때
	ㆍ랜덤 액세스를 자주 안할때

@ 궁금증
데이터의 개수와 상관없이 중간 삽입/삭제가 동일한 상수시간이 소요된다했는데
왜 순회속도는 O(n) 인가? 중간 삽입/삭제도 O(n)이여야 하는거 아닌가