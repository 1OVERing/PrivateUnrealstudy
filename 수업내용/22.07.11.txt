STL이란
C++ 템플릿을 사용해 만든 표준 라이브러리이다.
일반적으로 컨테이너(container)라이브러리를 가장 많이 사용한다.
컨테이너란 데이터 저장소를 의미한다.

STL의 장점
	STL을 사용하지 않으면 필요한 자료구조의 형태로 직접 구현해야 한다.
	직접 구현한다면, 프로젝트가 바뀔 때마다 만들어야하고, 유지보수가 불편하다.
	자료구조의 구현 시간을 줄일 수 있고, 사용 방법 및 구조가 항상 같기 때문에
	유지보수 측면에서 좋다.



list
	#저장할 데이터가 가변적인 경우 (저장 공간의 크기 변경에 유연하게 대처가 가능하다)
	#중간에 데이터 삽입이나 삭제가 빈번한 경우
	#데이터를 랜덤 액세스의 횟수가 없거나 적을 때
※ 저장할 데이터가 개수가 많은데, 자주 검색을 해야한다면 다른 컨테이너 라이브러리를
사용해야 한다. ( list는 검색속도가 느리기 때문에 이경우 map,set,hash_map을 사용하자)


C++는 oop 언어이다.(객체 지향 프로그래밍)
object-oriented-programming
class = data + function
class가 퍼스트 시티즌에서 만족하면 객체지향이라고 해준다.
C++ 1급 객체(검색해보자)

#&&
L-R value를 다룰 때 사용된다.
임시값
insert를 할때 복사생성자가 발생하는데 이를 해결하기 위해서
객체 그 자체를 가져온다기 보다 data그 자체만 이동시킨다.
그 임시값인지 아닌지를 판단하기 위해서 나온 것이 &&문법이다.
insert때 {}이니셔라이져로 값을 넣어주는 기능도 추가되었다.
모든 STL에서 push_back 보단 emplace_back(인플레이스_백)을 쓰는것이 좋다.
pushback에선 임시값이 아니면 복사생성을 하며 임시값이면 이동을 시킨다.
emplace는 무조건 이동을 시킨다.


내일 휴무